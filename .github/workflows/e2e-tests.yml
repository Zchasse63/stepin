name: E2E Tests

on:
  push:
    branches: [main, develop, feature/payment-reporting]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual trigger

env:
  EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_TEST_URL }}
  EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_TEST_ANON_KEY }}
  SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_TEST_SERVICE_KEY }}
  MOCK_HEALTHKIT: "true"
  MOCK_NOTIFICATIONS: "true"
  MOCK_DATE: "true"
  TEST_MODE: "true"
  NODE_ENV: "test"

jobs:
  # P0 Tests - Run on every commit (Critical path)
  test-p0-critical:
    name: P0 - Critical Tests
    runs-on: macos-14
    timeout-minutes: 25
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate Test Supabase Instance
        run: |
          echo "ðŸ”’ Validating Supabase instance..."
          EXPECTED_TEST_ID="hwzyuugggdubeejfpele"
          PRODUCTION_ID="mvvndpuwrbsrahytxtjf"

          if [[ "${{ secrets.SUPABASE_TEST_URL }}" != *"$EXPECTED_TEST_ID"* ]]; then
            echo "ðŸš¨ CRITICAL ERROR: Wrong Supabase instance configured!"
            echo "Expected TEST instance ID: $EXPECTED_TEST_ID"
            echo "Current URL: ${{ secrets.SUPABASE_TEST_URL }}"

            if [[ "${{ secrets.SUPABASE_TEST_URL }}" == *"$PRODUCTION_ID"* ]]; then
              echo "â›” PRODUCTION INSTANCE DETECTED!"
              echo "This would run tests against PRODUCTION database!"
            fi

            echo ""
            echo "ðŸ“– See SUPABASE_INSTANCES.md for correct configuration"
            exit 1
          fi

          echo "âœ… Verified: Using TEST instance ($EXPECTED_TEST_ID)"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: stepin-app/package-lock.json

      - name: Install dependencies
        working-directory: stepin-app
        run: npm ci

      - name: Install Maestro CLI
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH

      - name: Verify Maestro installation
        run: maestro --version

      - name: Setup iOS Simulator
        run: |
          xcrun simctl boot "iPhone 16 Plus" || true
          xcrun simctl list devices

      - name: Seed test database
        working-directory: stepin-app
        run: npm run test:seed-db

      - name: Build iOS app for testing
        working-directory: stepin-app
        run: |
          npx expo prebuild --platform ios --clean
          xcodebuild -workspace ios/Stepin.xcworkspace \
            -scheme Stepin \
            -configuration Release \
            -sdk iphonesimulator \
            -derivedDataPath ios/build \
            -destination 'platform=iOS Simulator,name=iPhone 16 Plus'

      - name: Run P0 Tests (Auth, Logging, Tracking, Streaks)
        working-directory: stepin-app
        run: npm run test:e2e:p0

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: p0-test-results
          path: stepin-app/e2e-results/

      - name: Upload screenshots on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: p0-failure-screenshots
          path: stepin-app/.maestro/

      - name: Cleanup test database
        if: always()
        working-directory: stepin-app
        run: npm run test:cleanup-db

  # P1 Tests - Run on main/develop branches (High priority)
  test-p1-high:
    name: P1 - High Priority Tests
    runs-on: macos-14
    timeout-minutes: 30
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: stepin-app/package-lock.json

      - name: Install dependencies
        working-directory: stepin-app
        run: npm ci

      - name: Install Maestro CLI
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH

      - name: Setup iOS Simulator
        run: |
          xcrun simctl boot "iPhone 16 Plus" || true

      - name: Seed test database
        working-directory: stepin-app
        run: npm run test:seed-db

      - name: Build iOS app for testing
        working-directory: stepin-app
        run: |
          npx expo prebuild --platform ios --clean
          xcodebuild -workspace ios/Stepin.xcworkspace \
            -scheme Stepin \
            -configuration Release \
            -sdk iphonesimulator \
            -derivedDataPath ios/build \
            -destination 'platform=iOS Simulator,name=iPhone 16 Plus'

      - name: Run P1 Tests (Today, History, Profile)
        working-directory: stepin-app
        run: npm run test:e2e:p1

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: p1-test-results
          path: stepin-app/e2e-results/

      - name: Cleanup test database
        if: always()
        working-directory: stepin-app
        run: npm run test:cleanup-db

  # Full Test Suite - Run on schedule and manual trigger
  test-full-suite:
    name: Full Test Suite (P0 + P1 + P2)
    runs-on: macos-14
    timeout-minutes: 45
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: stepin-app/package-lock.json

      - name: Install dependencies
        working-directory: stepin-app
        run: npm ci

      - name: Install Maestro CLI
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH

      - name: Setup iOS Simulator
        run: |
          xcrun simctl boot "iPhone 16 Plus" || true

      - name: Seed test database
        working-directory: stepin-app
        run: npm run test:seed-db

      - name: Build iOS app for testing
        working-directory: stepin-app
        run: |
          npx expo prebuild --platform ios --clean
          xcodebuild -workspace ios/Stepin.xcworkspace \
            -scheme Stepin \
            -configuration Release \
            -sdk iphonesimulator \
            -derivedDataPath ios/build \
            -destination 'platform=iOS Simulator,name=iPhone 16 Plus'

      - name: Run Full Test Suite
        working-directory: stepin-app
        run: npm run test:e2e

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: full-test-results
          path: stepin-app/e2e-results/

      - name: Generate test report
        if: always()
        run: |
          echo "## E2E Test Results" >> $GITHUB_STEP_SUMMARY
          echo "Full test suite execution completed" >> $GITHUB_STEP_SUMMARY

      - name: Cleanup test database
        if: always()
        working-directory: stepin-app
        run: npm run test:cleanup-db

